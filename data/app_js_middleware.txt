const express = require('express')
const app = express()

//Izvrsava se uvijek
app.use((req, res, next) => {
    console.log('Time:', Date.now())
    next()
})

//Izvrsava se kada je pristup rootu i dalje
app.use('/', (req, res, next) => {
    console.log('Time:', Date.now())
    next()
})

//Izvrsava se samo kada je pristup root/user/:id
// app.use('/user/:id', (req, res, next) => {
//     console.log('Request Type:', req.method)
//     res.send('USER')
//     next()
// }, (req, res, next) => {
//     console.log('Request URL:', req.originalUrl)
//     next()
// })

app.get('/user/:id', function (req, res, next) {
    // if the user ID is 0, skip to the next route
    if (req.params.id === '0') next('route')
    // otherwise pass the control to the next middleware function in this stack
    else next()
}, function (req, res, next) {
    // send a regular response
    res.send('regular')
})
  
// handler for the /user/:id path, which sends a special response
app.get('/user/:id', function (req, res, next) {
    res.send('special')
})


//* Middleware can also be declared in an array for reusability.
function logOriginalUrl (req, res, next) {
console.log('Request URL:', req.originalUrl)
next()
}
  
function logMethod (req, res, next) {
    console.log('Request Type:', req.method)
    next()
}

const logStuff = [logOriginalUrl, logMethod]
app.get('/users', logStuff, function (req, res, next) {
  res.send('User Info')
})

app.listen(3000)